name: Build and Push Fullstack to GHCR

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[publish]') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get version
        id: version
        run: |
          VERSION=$(node docker-full.js get)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Using version: ${VERSION}"

      - name: Build frontend
        working-directory: frontend
        env:
          EXPO_PUBLIC_SELFHOSTED: true
          EXPO_PUBLIC_API_URL: "/"
        run: |
          npm install
          npm run build:web

      - name: Copy frontend build to backend public folder
        run: |
          rm -rf backend/public/*
          cp -r frontend/dist/* backend/public/
          ls -la backend/public/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: vars
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMG="ghcr.io/${OWNER_LC}/zentik-notifier"
          VERSION="${{ steps.version.outputs.version }}"
          TAG1="${IMG}:${GITHUB_SHA}"
          TAG_VERSION="${IMG}:${VERSION}"
          TAG_LATEST="${IMG}:latest"
          echo "image=${IMG}" >> $GITHUB_OUTPUT
          echo "tag_primary=${TAG1}" >> $GITHUB_OUTPUT
          echo "tag_version=${TAG_VERSION}" >> $GITHUB_OUTPUT
          echo "tag_latest=${TAG_LATEST}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.vars.outputs.tag_primary }}
            ${{ steps.vars.outputs.tag_latest }}
            ${{ steps.vars.outputs.tag_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
